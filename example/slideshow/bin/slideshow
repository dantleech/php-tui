#!/usr/bin/env php
<?php

use PhpTui\Term\Terminal;
use PhpTui\Tui\Adapter\Bdf\FontRegistry;
use PhpTui\Tui\Adapter\ImageMagick\Shape\ImageShape;
use PhpTui\Tui\Adapter\PhpTerm\PhpTermBackend;
use PhpTui\Tui\Example\Slideshow\App;
use PhpTui\Tui\Example\Slideshow\Slide\CassowarySlide;
use PhpTui\Tui\Example\Slideshow\Slide\DefinitionSlide;
use PhpTui\Tui\Example\Slideshow\Slide\ListAndImageLR;
use PhpTui\Tui\Example\Slideshow\Slide\PargagraphAndImageDT;
use PhpTui\Tui\Example\Slideshow\Slide\Splash;
use PhpTui\Tui\Example\Slideshow\Slide\TitlePargagraphAndImageDT;
use PhpTui\Tui\Model\Display;
use Symfony\Component\VarDumper\Cloner\VarCloner;
use Symfony\Component\VarDumper\VarDumper;
use Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider;
use Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider;
use Symfony\Component\VarDumper\Dumper\CliDumper;
use Symfony\Component\VarDumper\Dumper\ServerDumper;

require __DIR__ . '/../../../vendor/autoload.php';

$cloner = new VarCloner();
$dumper = new ServerDumper('tcp://127.0.0.1:9912', new CliDumper(), [
    'cli' => new CliContextProvider(),
    'source' => new SourceContextProvider(),
]);

VarDumper::setHandler(function ($var) use ($cloner, $dumper): void {
    $dumper->dump($cloner->cloneVar($var));
});
$registry = FontRegistry::default();
$app = new App(
    Terminal::new(),
    Display::fullscreen(PhpTermBackend::new()),
    [
        new Splash($registry),
        new ListAndImageLR(
            ImageShape::fromFilename(
                __DIR__ . '/../assets/me.small.JPG'
            ),
            $registry,
            title: 'About Me',
            items: [
                '- Daniel Leech',
                '- PHP Developer for 17 years!',
                '- Phpactor: Language Server',
                '- PHPBench: Code profiling tool',
                '- Unemployed!',
            ]
        ),
        new PargagraphAndImageDT(
            ImageShape::fromFilename(
                __DIR__ . '/../assets/logo.png'
            ),
            $registry,
            title: 'Redundancy',
            text: 'Since being made redundant 3 weeks ago I have been using my unexpected free time to start a project that has been in my minds eye for some time: a TUI framework for PHP.',
        ),
        new DefinitionSlide(
            $registry,
            'What is a TUI framework?',
            'TUI stands for Terminal User Interface. It’s generally for a full screen application that runs in the terminal and is controlled with the keyboard, although it’s also possible for TUIs to use the mouse!',
        ),
        new TitlePargagraphAndImageDT(
            ImageShape::fromFilename(
                __DIR__ . '/../assets/storm.jpg'
            ),
            $registry,
            title: 'Redundancy',
            text: 'It’s a horrible word, and it’s a word that grows heavier the longer I don’t have a job. But the good thing is that I now had plenty of spare time.',
        ),
        new PargagraphAndImageDT(
            ImageShape::fromFilename(
                __DIR__ . '/../assets/ratatui.png'
            ),
            $registry,
            title: 'Porting Ratatui from Rust',
            text: 'I did what most people do in this situation and decided to port Ratatui to PHP.',
        ),
        new ListAndImageLR(
            ImageShape::fromFilename(
                __DIR__ . '/../assets/ratatuiony.png'
            ),
            $registry,
            title: 'Ratatui',
            items: [
                '- TUI framework for Rust',
                '- Successor project of Rust TUI',
                '- Layouts',
                '- Charts',
                '- Tables',
                '- Lists',
                '- Paragraphs',
                '- ... easy!?',
            ]
        ),
        new CassowarySlide(
            registry: $registry,
            title: 'Cassowary',
            items: []
        ),
    ]
);
$app->run();
